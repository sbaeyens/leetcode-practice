// class Node {
//   constructor(val) {
//     this.val = val;
//     this.left = null;
//     this.right = null;
//   }
// }

// ~~~~~  ITERATIVE  ~~~~~~
// const treeIncludes = (root, target) => {
//   if (root === null) return false
//   let queue = [root]
//   while (queue.length > 0) {
//     let current = queue.shift()
//     if (current.val === target) return true

//     if (current.left) queue.push(current.left)
//     if (current.right) queue.push(current.right)
//   }
//   return false
// };

// ~~~~~  RECURSIVE  ~~~~~~
const treeIncludes = (root, target) => {
  if (root === null) return false
  if (root.val === target) return true
  return treeIncludes(root.left, target) || treeIncludes(root.right, target)
}

module.exports = {
  treeIncludes,
};
