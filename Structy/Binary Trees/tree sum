// class Node {
// constructor(val) {
// this.val = val;
// this.left = null;
// this.right = null;
// }
// }

// iterative
const treeSum = (root) => {

if (root === null) return 0

let queue = [root]
let result = 0

while (queue.length > 0) {
let current = queue.shift()
result += current.val

    if (current.left) queue.push(current.left)
    if (current.right) queue.push(current.right)

}

return result

};

// recursive
// const treeSum = (root) => {
// if (root === null) return 0

// return root.val + treeSum(root.left) + treeSum(root.right)

// };

module.exports = {
treeSum,
};
