class Node {
  constructor(val) {
    this.val = val;
    this.next = null;
  }
}

// traverse list. For each node, check if head.val === target
// if yes, return true.
// if reach end with no matches, return false.

// ITERATIVE //
// const linkedListFind = (head, target) => {
//   let curr = head
//   while (curr !== null) {
//     if (curr.val === target) return true
//     curr = curr.next
//   }
//   return false

// };

// RECURSIVE //
const linkedListFind = (head, target) => {
  if (head === null) return false
  if (head.val === target) return true
  return linkedListFind(head.next, target)

};


module.exports = {
  linkedListFind,
};
